/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React from 'react'
import { useGLTF } from '@react-three/drei'
//import { Material } from 'three'
import * as THREE from 'three'
export default function Model(props) {
  const { nodes, materials } = useGLTF('/Queso2.glb')
  //Aqui declaro el material por default como translucido y despues cambio se opacidad

  const selected_material = new THREE.MeshPhongMaterial({
    color: 0xFF0000,    // red (can also use a CSS color string here)
    flatShading: true,
  });


  
  materials.Material.transparent=true
  materials.Material.opacity=0.5
  return( 
    //Esto basicamente crea un nuevo modelo basandose en el archivo de blender, obteniedo su geometria, material y propiedades lineales(posicion, escala)
      //Esto basicamente crea un nuevo modelo basandose en el archivo de blender, obteniedo su geometria, material y propiedades lineales(posicion, escala)
      <group {...props} dispose={null}>
        <mesh geometry={nodes.Ventanal1.geometry} material= {(props.name === "Cubiculos1") ? selected_material: materials.Material} position={[0.38, 2.6, 0.17]} scale={[2.17, 0.22, 2.05]} />
        <mesh geometry={nodes.LabRedes.geometry} material={(props.name === "LaboratorioRH") ? selected_material: nodes.LabRedes.material} position={[-0.13, 2.44, 0.09]} scale={[1.05, 0.37, 2.55]} />
        <mesh geometry={nodes.Ventanal3.geometry} material={materials.Material} position={[0.38, 1.6, 0.17]} scale={[1.91, 0.39, 1.84]} />
        <mesh geometry={nodes.Vnetanal2.geometry} material={(props.name === "Biblioteca") ? selected_material: materials.Material} position={[0.38, 2.05, 0.17]} scale={[2.03, 0.39, 2.05]} />
        <mesh geometry={nodes.Cube001.geometry} material={(props.name === "Laboratorio1") ? selected_material: nodes.Cube001.material} position={[-0.13, 1.18, -0.68]} scale={[1, 0.27, 0.64]} />
        <mesh geometry={nodes.Cube002.geometry} material={(props.name === "Laboratorio2") ? selected_material: nodes.Cube002.material} position={[-0.13, 1.18, 1.05]} scale={[1, 0.27, 0.64]} />
        <mesh geometry={nodes.Base1.geometry} material={(props.name === "Cubiculos2") ? selected_material: materials['Material.001']} position={[-0.13, 0.64, -0.68]} scale={[1, 0.27, 0.64]} />
        <mesh geometry={nodes.Base2.geometry} material={(props.name === "Cubiculos3") ? selected_material: materials['Material.001']} position={[-0.13, 0.64, 1.06]} rotation={[Math.PI, -0.01, Math.PI]} scale={[1, 0.27, 0.64]} />
        <mesh geometry={nodes.Pilar.geometry} material={nodes.Pilar.material} position={[-0.98, 1.24, 2.49]} scale={[-0.07, 0.88, 0.07]} />
        <mesh geometry={nodes.Pilar001.geometry} material={nodes.Pilar001.material} position={[-0.98, 1.24, -2.37]} scale={[-0.07, 0.88, 0.07]} />
        <mesh geometry={nodes.Pilar002.geometry} material={nodes.Pilar002.material} position={[-1.08, 1.5, 1.62]} scale={[-0.07, 0.62, 0.07]} />
        <mesh geometry={nodes.Pilar003.geometry} material={nodes.Pilar003.material} position={[-1.08, 1.5, -1.27]} scale={[-0.07, 0.62, 0.07]} />
        <mesh geometry={nodes.Pilar004.geometry} material={nodes.Pilar004.material} position={[0.82, 1.24, -2.37]} scale={[-0.07, 0.88, 0.07]} />
        <mesh geometry={nodes.Pilar005.geometry} material={nodes.Pilar005.material} position={[0.7, 1.24, 2.49]} scale={[-0.07, 0.88, 0.07]} />
        <mesh geometry={nodes.Cube.geometry} material={nodes.Cube.material} position={[1.53, 1.51, 0.26]} scale={[0.58, 1.15, 2.54]} />
        <mesh geometry={nodes.Plane.geometry} material={nodes.Plane.material} position={[0.33, 0.01, -0.02]} scale={[2.57, 1, 3.53]} />
      </group>
  )
}

useGLTF.preload('/Queso2.glb')
